<krpano>
    <events name="advance" onviewchanged=""
            onnewscene="js(changeScene(get(xml.scene)))"
            onloadcomplete=""
            keep="true" />

    <events name="nadirlogorotation"
            onviewchange="if(hotspot[nadirlogo].rotatewithview, set(hotspot[nadirlogo].rotate,get(view.hlookat)) );"
    />

    <!-- start the xml action -->
    <action name="addSceneChangeHotSpot">
        set(schp_name,%2); addhotspot(get(schp_name)); set(hotspot[get(schp_name)].url,%1);
        set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].linkedscene,%3);set(hotspot[get(schp_name)].hotspottitle,%11);
        set(hotspot[get(schp_name)].width,'prop'); set(hotspot[get(schp_name)].height,'50');
        set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,'loadscene(get(linkedscene), null, MERGE,
        %10);'); , set(hotspot[get(schp_name)].ondown,'draghotspot();');
        set(hotspot[get(schp_name)].onup,'js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"scene"));');
        ); if(%6 == '2', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%9 ==
        '1',txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspotTitle);");
        txtadd(vrhs,'vr',get(name)); addhotspot(get(vrhs));
        copy(hotspot[get(vrhs)].url,url); copy(hotspot[get(vrhs)].ath,ath); copy(hotspot[get(vrhs)].atv,atv);
        copy(hotspot[get(vrhs)].linkedscene,linkedscene); copy(hotspot[get(vrhs)].width,width);
        copy(hotspot[get(vrhs)].height,height); copy(hotspot[get(vrhs)].onclick,onclick); if(%6 == '2',
        txtadd(hotspot[get(vrhs)].onloaded , 'do_crop_animation(60,60, 60);'); ); );
    </action>

    <action name="addLinkHotSpot">
        set(schp_name,%2); addhotspot(get(schp_name)); set(hotspot[get(schp_name)].url,%1);
        set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].hotspottitle,%3); set(hotspot[get(schp_name)].hotspotlink,%9);
        set(hotspot[get(schp_name)].width,'prop'); set(hotspot[get(schp_name)].height,'50');
        set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,'js(window.open(get(hotspot[get(name)].hotspotlink), "_blank"));'); ,
        set(hotspot[get(schp_name)].ondown,'draghotspot();');
        set(hotspot[get(schp_name)].onup,'js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"link"));');
        ); if(%6 == '2', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%10 == true,
        txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspottitle);"); );
    </action>


    <action name="addIconlist">
        set(icon_list_name,%2);
        addlayer(get(icon_list_name));
        set(layer[get(icon_list_name)].url,%1);
        set(layer[get(icon_list_name)].align,%3);
        set(layer[get(icon_list_name)].x,%4);
        set(layer[get(icon_list_name)].y,%5);
        set(layer[get(icon_list_name)].zorder,4);
        set(layer[get(icon_list_name)].background,false);
        set(layer[get(icon_list_name)].border,false);
        set(layer[get(icon_list_name)].enabled,true);
        set(layer[get(icon_list_name)].width,%6);
        set(layer[get(icon_list_name)].height,%7);
        set(layer[get(icon_list_name)].keep,true);
        <!--set(layer[get(icon_list_name)].scale,0.6);-->
        set(layer[get(icon_list_name)].onclick,%8);
    </action>


    <action name="addWordHotSpot">
        set(schp_name,%2); addhotspot(get(schp_name)); set(hotspot[get(schp_name)].url,%1);
        set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].hotspottitle,%3); set(hotspot[get(schp_name)].wordcontent,%9);
        set(hotspot[get(schp_name)].width,'prop'); set(hotspot[get(schp_name)].height,'50');
        set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,'toggle_word_show(true,get(hotspot[get(name)].hotspottitle),get(hotspot[get(name)].wordcontent));');
        , set(hotspot[get(schp_name)].ondown,'draghotspot();');
        set(hotspot[get(schp_name)].onup,'js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"text"));');
        ); if(%6 == '2', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%10 == true,
        txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspottitle);"); );
    </action>
    <action name="addImgHotSpot">
        set(schp_name,%2); addhotspot(get(schp_name)); set(hotspot[get(schp_name)].url,%1);
        set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].hotspottitle,%3); set(hotspot[get(schp_name)].galleryname,%9);
        set(hotspot[get(schp_name)].width,'prop'); set(hotspot[get(schp_name)].height,'50');
        set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,'changeImg(%11,%9);'); ,
        set(hotspot[get(schp_name)].ondown,'draghotspot();');
        set(hotspot[get(schp_name)].onup,'js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"image"));');
        ); if(%6 == '2', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%10 == true,
        txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspottitle);"); );
    </action>
    <action name="addImgTextHotSpot">
        set(schp_name,%2); addhotspot(get(schp_name)); set(hotspot[get(schp_name)].url,%1);
        set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].hotspottitle,%3); set(hotspot[get(schp_name)].wordcontent,%9);
        set(hotspot[get(schp_name)].width,'prop'); set(hotspot[get(schp_name)].height,'50');
        set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,js(showPictext(get(hotspot[get(name)].hotspottitle),%9)));
        <!--
         toggle_word_show(true,get(hotspot[get(name)].hotspottitle),get(hotspot[get(name)].wordcontent));
        -->
        , set(hotspot[get(schp_name)].ondown,draghotspot(););
        set(hotspot[get(schp_name)].onup,js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"imgtext")));
        ); if(%6 == '2', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%10 == true,
        txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspottitle);"); );
    </action>
    <action name="addVoiceHotSpot">
        set(schp_name,%2); addhotspot(get(schp_name)); set(hotspot[get(schp_name)].url,%1);
        set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].hotspottitle,%3); set(hotspot[get(schp_name)].musicsrc,%9);
        set(hotspot[get(schp_name)].width,'prop'); set(hotspot[get(schp_name)].height,'50');
        set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,'play_hotspot_voice(get(hotspot[get(name)].musicsrc),%2);'); ,
        set(hotspot[get(schp_name)].ondown,'draghotspot();');
        set(hotspot[get(schp_name)].onup,'js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"voice"));');
        ); if(%6 == '2', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%10 == true,
        txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspottitle);"); );
    </action>
    <action name="addAroundHotSpot">
        set(schp_name,%2); if(around_object_id === null,set(around_object_id,0)); addhotspot(get(schp_name));
        set(hotspot[get(schp_name)].url,%1); set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].hotspottitle,%3); set(hotspot[get(schp_name)].aroundpath,%9); if('%10' == null OR
        '%10' == undefined, set(hotspot[get(schp_name)].filecount,36);, set(hotspot[get(schp_name)].filecount,%10); );
        set(hotspot[get(schp_name)].aroundobjectid,get(around_object_id)); set(hotspot[get(schp_name)].width,'prop');
        set(hotspot[get(schp_name)].height,'50'); set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,'buildframes(get(hotspot[get(name)].aroundpath),get(hotspot[get(name)].filecount),get(hotspot[get(name)].aroundobjectid));set(settings.objectid,get(hotspot[get(name)].aroundobjectid));set(settings.objectnum,36);');
        inc(around_object_id); , set(hotspot[get(schp_name)].ondown,'draghotspot();');
        set(hotspot[get(schp_name)].onup,'js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"around"));');
        ); if(%6 == '1', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%11 == true,
        txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspottitle);"); );
    </action>
    <action name="addObjHotSpot">
        set(schp_name,%2); addhotspot(get(schp_name)); set(hotspot[get(schp_name)].url,%1);
        set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].hotspottitle,%3); set(hotspot[get(schp_name)].width,'prop');
        set(hotspot[get(schp_name)].height,'50'); set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,'js(obj_buildframes(%9));'); ,
        set(hotspot[get(schp_name)].ondown,'draghotspot();');
        set(hotspot[get(schp_name)].onup,'js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"obj"));');
        ); if(%6 == '1', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%10 == true,
        txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspottitle);"); );
    </action>
    <!-- <action name="addVideoHotSpot">
        set(schp_name,%2); addhotspot(get(schp_name)); set(hotspot[get(schp_name)].url,%1);
        set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].hotspottitle,%3); set(hotspot[get(schp_name)].width,'prop');
        set(hotspot[get(schp_name)].height,'50'); set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,videoplayer_open(%9, '', 0.5); ); ,
        set(hotspot[get(schp_name)].ondown,'draghotspot();');
        set(hotspot[get(schp_name)].onup,'js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"video"));');
        ); if(%6 == '2', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%10 == true,
        txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspottitle);"); );
    </action> -->

    <action name="addVideoHotSpot">
        set(schp_name,%2); addhotspot(get(schp_name)); set(hotspot[get(schp_name)].url,%1);
        set(hotspot[get(schp_name)].ath,%4); set(hotspot[get(schp_name)].atv,%5);
        set(hotspot[get(schp_name)].hotspottitle,%3); set(hotspot[get(schp_name)].width,'prop');
        set(hotspot[get(schp_name)].height,'50'); set(hotspot[get(schp_name)].visible,%8); if(%7 == false,
        set(hotspot[get(schp_name)].onclick,newVideo(%9,%11,%12); ); ,
        set(hotspot[get(schp_name)].ondown,'draghotspot();');
        set(hotspot[get(schp_name)].onup,'js(hotspotInd.updateHotSpotData(get(xml.scene),get(name),get(ath),get(atv),"video"));');
        ); if(%6 == '2', txtadd(hotspot[get(schp_name)].onloaded,"do_crop_animation(60,60, 60);"); ); if(%10 == true,
        txtadd(hotspot[get(schp_name)].onloaded,"add_all_the_time_tooltip(hotspot[get(name)].hotspottitle);"); );
    </action>

    <action name="newVideo">
        if(device.html5,
            js(videoPh_open(%1,%2,%3));
            ,
            videoplayer_open(%1,%2, 0.5);
        )
    </action>

    <!-- end the xml action -->
    <plugin name="soundinterface" url="%SWFPATH%/plugins/soundinterface.swf"
            alturl="%SWFPATH%/plugins/soundinterface.js" preload="true"/>

    <events onresize="make_gallery(get(activeGallery));"/>
    <layer name="gallery" type="container" align="center" width="100%" height="100%" alpha="0" autoalpha="true"
           bgcolor="0x000000" bgalpha="0.8" keep="true" zorder="100">
        <layer name="gallery_scrollarea" url="%SWFPATH%/plugins/scrollarea.swf"
               alturl="%SWFPATH%/plugins/scrollarea.js" keep="true" align="left" width="0" height="100%"
               zorder="1" direction="h" ondown="set(gallery_scrollarea_start_pos, get(x))"/>
        <layer name="arrow_left" align="left" x="10" keep="true" visible="false" zorder="2" onclick="move_image(left)"
               url="%SWFPATH%/custom/images/left-white.png"/>
        <layer name="arrow_right" align="right" x="10" keep="true" visible="false" zorder="2"
               onclick="move_image(right)" url="%SWFPATH%/custom/images/right-white.png"/>
        <layer name="gallery_close" align="righttop" x="50" y="10" x.mobile="100" keep="true" zorder="2" onclick="hide_gallery();"
               url="%SWFPATH%/custom/images/close.png"/>
    </layer>

    <!-- name="glrhotspot_290" -->
    <gallery name="galleryBox" title="Tmp of gallery">
        <!--<img name="imgSpot" url="/images/lazy.png" title="Placeholder"/>-->
        <img name="imgSpot" url="/images/lazy.png" title="Placeholder"/>
    </gallery>

    <layer name="wordcontainer" keep="true" type="container" bgcolor="0x000000" bgalpha="0.8" align="lefttop" x="0"
           y="0" width="100%" height="100%" visible="false" zorder="100" bgcapture="true"
           onclick="toggle_word_show(false)">
        <layer name="wordtitle" parent="wordcontainer" keep="true" type="container" align="top" width="100%"
               height="20%">
            <layer name="wordtitlestr" url="%SWFPATH%/plugins/textfield.swf" align="center"
                   background="false" css="text-align:center;color:#ffffff;font-weight:700; font-size:24px;" html=""/>
        </layer>
        <layer name="wordcontent" parent="wordcontainer" keep="true" type="container" align="bottom" edge="bottom"
               width="100%" height="80%" bgcolor="0xaaaaaa">
            <layer name="wordcontentstr" url="%SWFPATH%/plugins/textfield.swf" align="top" width="80%"
                   height="80%" background="false" css="text-align:left;color:#ffffff;font-weight:500; font-size:18px;"
                   html=""/>
        </layer>
        <layer name="word_close" align="righttop" x="50" y="10" x.mobile="100" keep="true" zorder="99" onclick="toggle_word_show(false);"
               url="%SWFPATH%/custom/images/close.png"/>
    </layer>


    <action name="toggle_word_show">
        if(%1 == true, set(layer[wordtitlestr].html,%2); set(layer[wordcontentstr].html,%3);
        set(layer[wordcontainer].visible, true); tween(layer[wordcontainer].alpha, 1.0, 0.5,easeOutQuad); ,
        tween(layer[wordcontainer].alpha, 0.0, 0.5,easeOutQuad,set(layer[wordcontainer].visible, false);); );
    </action>

    <action name="play_hotspot_voice">
        if(isNow == %2,
            pausesoundtoggle(hotspotbgm);
            if(hasPlay == true,
                set(hasPlay,false);
                ,
                set(hasPlay,true);
            );
            ,
            stopsound(hotspotbgm);
            playsound(hotspotbgm,%1,0);
            set(hasPlay,true);
            set(isNow,%2);
        )

    </action>


    <!-- <events onmousedown="set(bt,0);"/>
    <action name="bombtimer">
        set(autorotate.enabled,true);
        set(bt,%1);
        add(bt,1);
        delayedcall(1, bombtimer(get(bt)));
        copy(bt_1,autorotate.speed);
        Math.abs(bt_1);
        div(bt_2,360,bt_1);
        add(bt_2,autorotate.waittime);
        if(bt GE bt_2, set(bt,0); nextscene(););
    </action> -->
    <action name="nextscene">
        set(ns, get(scene[get(xml.scene)].index));
        set(maxs, get(scene.count));
        add(ns,1);
        if(ns == maxs, set(ns,0));
        loadscene(get(scene[get(ns)].name), null, MERGE, BLEND(1.5));
    </action>

    <action name="changeImg">
        show_gallery(galleryBox);
        set(img[imgSpot].url,%1);
        delayedcall(0,set(layer[imgSpot].url,%1));
    </action>
    <!-- %SWFPATH%/plugins/ -->
    <!-- 特效xml action -->
    <action name="addEffect">
        if(plugin[snow] === null, addplugin(snow);
        if(device.html5,set(plugin[snow].url,'%SWFPATH%/plugins/snow.js');,set(plugin[snow].url,'%SWFPATH%/plugins/snow.swf');)
        set(plugin[snow].floor,0.7); set(plugin[snow].zorder,1); set(plugin[snow].keep,false); ); if('%1' ==
        'defaultsnow', defaultsnow()); if('%1' == 'snowballs', snowballs()); if('%1' == 'snowflakes', snowflakes());
        if('%1' == 'silverstars', silverstars()); if('%1' == 'goldenstars', goldenstars()); if('%1' == 'hearts',
        hearts()); if('%1' == 'smileys', smileys()); if('%1' == 'hearts', hearts()); if('%1' == 'redpackets',
        redpackets()); if('%1' == 'money', money()); if('%1' == 'rain', rain()); if('%1' == 'midrain', midrain());
        if('%1' == 'heavyrain', heavyrain());if('%1' == 'mushroom', mushroom()); if('%1' =='custom', customeffect(%2));
    </action>
    <action name="defaultsnow">
        set(plugin[snow].mode, snow); set(plugin[snow].blendmode, normal); set(plugin[snow].flakes, 4000);
        set(plugin[snow].color, 0xFFFFFF); set(plugin[snow].speed, 1.0); set(plugin[snow].shake, 4.0);
        set(plugin[snow].speedvariance, 2.0); set(plugin[snow].spreading, 4.0); set(plugin[snow].wind, 0.0);
    </action>
    <action name="snowballs">
        trace("snowballs");
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/snowball.png');
        set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 2000);
        set(plugin[snow].imagescale, 0.5);
        set(plugin[snow].speed, 1.0);
        set(plugin[snow].shake, 4.0);
        set(plugin[snow].speedvariance, 2.0);
        set(plugin[snow].spreading, 2.0);
        set(plugin[snow].wind, 0.0);
    </action>

    <action name="snowflakes">
        trace("snowflakes");
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/snowflake.png');
        set(plugin[snow].blendmode, add);
        set(plugin[snow].flakes, 2000);
        set(plugin[snow].imagescale, 0.4);
        set(plugin[snow].speed, 0.5);
        set(plugin[snow].shake, 8.0);
        set(plugin[snow].speedvariance, 2.0);
        set(plugin[snow].spreading, 2.0);
        set(plugin[snow].wind, 0.0);
    </action>

    <action name="silverstars">
        trace("silverstars");
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/silverstar.png');
        set(plugin[snow].blendmode, add);
        set(plugin[snow].flakes, 2000);
        set(plugin[snow].imagescale, 0.3);
        set(plugin[snow].speed, 1.0);
        set(plugin[snow].shake, 4.0);
        set(plugin[snow].speedvariance, 2.0);
        set(plugin[snow].spreading, 2.0);
        set(plugin[snow].wind, 0.0);
    </action>

    <action name="redpackets">
        trace("redpackets");
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/redpacket.png');
        set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 500);
        set(plugin[snow].imagescale, 0.8);
        set(plugin[snow].speed, 0.8);
        set(plugin[snow].shake, 8.0);
        set(plugin[snow].speedvariance, 3.0);
        set(plugin[snow].spreading, 2.5);
        set(plugin[snow].wind, 0.0);
    </action>

    <action name="goldenstars">
        trace("goldenstars");
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/star.png');
        set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 1000);
        set(plugin[snow].imagescale, 1.0);
        set(plugin[snow].speed, 1.0);
        set(plugin[snow].shake, 4.0);
        set(plugin[snow].speedvariance, 2.0);
        set(plugin[snow].spreading, 1.9);
        set(plugin[snow].wind, 0.0);
    </action>

    <action name="hearts">
        trace("hearts");
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/heart.png');
        set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 250);
        set(plugin[snow].imagescale, 0.5);
        set(plugin[snow].speed, 1.0);
        set(plugin[snow].shake, 4.0);
        set(plugin[snow].speedvariance, 2.0);
        set(plugin[snow].spreading, 1.5);
        set(plugin[snow].wind, 0.0);
    </action>

    <action name="smileys">

        trace("smileys");
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/smiley.png');
        set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 1000);
        set(plugin[snow].imagescale, 1.0);
        set(plugin[snow].speed, 1.0);
        set(plugin[snow].shake, 4.0);
        set(plugin[snow].speedvariance, 2.0);
        set(plugin[snow].spreading, 1.5);
        set(plugin[snow].wind, 0.0);
    </action>

    <action name="money">
        trace("money");
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/money.png');
        set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 500);
        set(plugin[snow].imagescale, 0.8);
        set(plugin[snow].speed, 0.8);
        set(plugin[snow].shake, 8.0);
        set(plugin[snow].speedvariance, 3.0);
        set(plugin[snow].spreading, 2.5);
        set(plugin[snow].wind, 0.0);
    </action>

    <action name="rain">
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/rain.png');
        set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 1000);
        set(plugin[snow].color, 0x7FAFFF);
        set(plugin[snow].speed, 20.0);
        set(plugin[snow].shake, 1.0);
        set(plugin[snow].speedvariance, 1.0);
        set(plugin[snow].spreading, 4.0);
        set(plugin[snow].wind, 2.0);
    </action>

    <action name="heavyrain">
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/rain.png');
        set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 4000);
        set(plugin[snow].color, 0x9FAFFF);
        set(plugin[snow].speed, 20.0);
        set(plugin[snow].shake, 0.0);
        set(plugin[snow].speedvariance, 1.0);
        set(plugin[snow].spreading, 10.0);
        set(plugin[snow].wind, 2.0);
    </action>

    <action name="mushroom">
        trace("mushroom");
        set(plugin[snow].mode, image);
        set(plugin[snow].imageurl, '%SWFPATH%/custom/images/snow_image/mushroom.png');
        set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 500);
        set(plugin[snow].imagescale, 0.8);
        set(plugin[snow].speed, 0.8);
        set(plugin[snow].shake, 8.0);
        set(plugin[snow].speedvariance, 3.0);
        set(plugin[snow].spreading, 2.5);
        set(plugin[snow].wind, 0.0);
    </action>

    <action name="customeffect">
        set(plugin[snow].mode, image); set(plugin[snow].imageurl, '%1'); set(plugin[snow].blendmode, normal);
        set(plugin[snow].flakes, 500); set(plugin[snow].imagescale, 1.0); set(plugin[snow].speed, 1.0);
        set(plugin[snow].shake, 4.0); set(plugin[snow].speedvariance, 2.0); set(plugin[snow].spreading, 1.9);
        set(plugin[snow].wind, 0.0);
    </action>


    <!-- add radar layer -->
    <layer name="mapcontainer" keep="true" type="container" bgcolor="transparent" bgalpha="0" align="righttop" x="60"
           y="10" width="264" height="264" visible="false">
        <layer name="map" url="" align="lefttop" x="0" y="0" width="264" height="264" handcursor="false"
               scalechildren="false">
            <layer name="radarmask" type="container" align="lefttop" width="100%" height="100%" maskchildren="true">
                <layer name="radar" visible="false" url="%SWFPATH%/plugins/radar.swf"
                       alturl="%SWFPATH%/plugins/radar.js" align="lefttop" edge="center" zorder="1"
                       scale="0.5" fillcolor="0xFFFFFF" oy="10" ox="10" fillalpha="0.8" linecolor="0xFF0000" linewidth="0.5"
                       linealpha="0.5" headingoffset="0"/>
                <layer name="activespot" url="%SWFPATH%/custom/images/radar-active.png" scale="1.0"
                       oy="0" align="lefttop" edge="lefttop" zorder="3" visible="false"/>
            </layer>
        </layer>
    </layer>
    <action name="radarinit">
        set(layer[mapcontainer].align,%1);
        set(layer[mapcontainer].x,%2);
        set(layer[mapcontainer].y,%3);
        set(layer[mapcontainer].width,%4);
        set(layer[mapcontainer].height,%5);

        sub(new_width,layer[mapcontainer].width,0);
        sub(new_height,layer[mapcontainer].height,0);
        copy(layer[map].width,new_width);
        copy(layer[map].height,new_height);
    </action>
    <style name="spot" url="%SWFPATH%/custom/images/radar-out.png" scale="1.0" oy="0" align="lefttop"
           edge="lefttop" zorder="2"
           onclick="subtxt(spotid,get(name),5,38);if(spotid != get(xml.scene), loadscene(get(spotid),null,MERGE,BLEND(1)); );"/>
    <action name="activatespot">
        txtadd(spotidnow,'spot_',get(xml.scene)); copy(layer[radar].x, layer[get(spotidnow)].x); copy(layer[radar].y,
        layer[get(spotidnow)].y); copy(layer[activespot].x, layer[get(spotidnow)].x); copy(layer[activespot].y,
        layer[get(spotidnow)].y); set(layer[radar].heading, %1); set(layer[radar].visible, true);
        set(layer[activespot].visible, true); set(layer[get(spotidnow)].visible, false);
    </action>


    <!-- <layer name="startpic_container" preload="true" alpha="1" handcursor="true" enabled="true" children="true" visible="true" zorder="90" type="container" maskchildren="true" keep="true" width="100%" height="100%" bgcolor="0xFFFFFF" bgalpha="1">

    <layer name="skin_title_logo3" zorder="100" keep="true" x="0" y="-80" align="center" url="%SWFPATH%/snow_image/heart.png" scale="1" alpha="0" onloaded="tween(alpha,1.0);tween(layer[skin_title_pr].alpha,1.0);"
    onclick="tween(layer[startpic_container].ox,-2500,1);delayedcall(2,set(layer[startpic_container].enabled,false);set(layer[startpic_container].visible,false);stopdelayedcall(startpic1);stopdelayedcall(startpic2);" enabled="false" />
    <layer name="skin_title_pr" background="true" backgroundcolor="0x999999" roundedge="10" backgroundalpha="0" border="true" bordercolor="0x999999" borderalpha="0" borderwidth="4.0" glow="0" glowcolor="0xCCCCCC" visible="true" keep="true" alpha="0" onloaded="" children="false" align="center" zorder="100" autowidth="auto" height="40" url="%SWFPATH%/plugins/textfield.swf" html="全景漫游" css="text-align:center; color:#9B8179; font-family:SimHei; font-weight:bold; font-size:32px;" x="0" y="150" onclick="tween(layer[startpic_container].ox,-2500,1);delayedcall(2,set(layer[startpic_container].enabled,false);set(layer[startpic_container].visible,false);stopdelayedcall(startpic1);stopdelayedcall(startpic2);" enabled="false" />
    </layer>
    <events name="startlogoevents" keep="true" onloadcomplete="ifnot(layer[skin_title_logo3].enabled,set(layer[skin_title_logo3].enabled,true);set(layer[skin_title_pr].enabled,true);delayedcall(startpic1,4,tween(layer[startpic_container].ox,-2500,1));delayedcall(startpic2,5,set(layer[startpic_container].enabled,false);set(layer[startpic_container].visible,false));)" /> -->
    <!-- 启动画面结束 -->


    <action name="picture_resize">
        <!-- 开场提示 -->
        <!-- delayedcall(5,tween(layer[%1].keep,false)); -->
        delayedcall(5,tween(layer[%1].alpha,0));
        div(aspect, layer[%1].imagewidth, layer[%1].imageheight);
        mul(new_width, stagewidth, 0.40);
        div(new_height, new_width, aspect);
        mul(max_height, stageheight, 0.40);

        if(new_height GT max_height,

        copy(new_height, max_height);

        mul(new_width, new_height, aspect);

        );

        roundval(new_width);

        roundval(new_height);

        copy(layer[%1].width, new_width);

        copy(layer[%1].height, new_height);
    </action>

    <action name="add_alert_img">
        set(alert_name,%2);
        addlayer(get(alert_name));
        set(layer[get(alert_name)].url,%1);
        set(layer[get(alert_name)].alpha,1);
        set(layer[get(alert_name)].zorder,10);
        set(layer[get(alert_name)].visible,true);
        set(layer[get(alert_name)].keep,true);
        set(layer[get(alert_name)].align,center);
        set(layer[get(alert_name)].align,center);
        set(layer[get(alert_name)].onclick,tween(alpha,0);delayedcall(0.5,set(visible,false)));
        set(layer[get(alert_name)].onloaded,picture_resize(get(name)));
    </action>


    <action name="add_all_the_time_tooltip">
        txtadd(tooltipname, 'tooltip_', get(name));
        addplugin(get(tooltipname));
        txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name), ']');
        set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
        set(plugin[get(tooltipname)].align,top);
        set(plugin[get(tooltipname)].edge,bottom);
        set(plugin[get(tooltipname)].x,0);
        set(plugin[get(tooltipname)].y,0);
        set(plugin[get(tooltipname)].autowidth,true);
        <!-- set(plugin[get(tooltipname)].width,100); -->
        set(plugin[get(tooltipname)].autoheight,true);
        set(plugin[get(tooltipname)].background,true);
        set(plugin[get(tooltipname)].backgroundcolor,0x000000);
        set(plugin[get(tooltipname)].roundedge,15);
        set(plugin[get(tooltipname)].backgroundalpha,0.5);
        set(plugin[get(tooltipname)].border,true);
        set(plugin[get(tooltipname)].glow,4);
        set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);
        set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold;
        font-size:16px;text-overflow:ellipsis;');
        set(plugin[get(tooltipname)].textshadow,1);
        set(plugin[get(tooltipname)].textshadowrange,6.0);
        set(plugin[get(tooltipname)].textshadowangle,90);
        copy(plugin[get(tooltipname)].html,%1);
        set(plugin[get(tooltipname)].enabled,false);
    </action>

    <action name="add_all_the_spot_tooltip">
        txtadd(tooltipname, 'tooltip_', get(name));
        addplugin(get(tooltipname));
        txtadd(plugin[get(tooltipname)].parent, 'hotspot[', get(name), ']');
        <!-- txtadd(nowonclick, 'hotspot[', get(name), '].onclick'); -->
        <!-- txtadd(nowscene, 'hotspot[', get(name), '].linkedscene'); -->
        <!-- set(plugin[get(tooltipname)].linkedscene,get(nowscene)); -->
        <!-- trace(get(nowonclick)); -->
        <!-- set(plugin[get(tooltipname)].onclick,get(nowonclick)); -->
        set(plugin[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
        set(plugin[get(tooltipname)].align,top);
        set(plugin[get(tooltipname)].edge,bottom);
        set(plugin[get(tooltipname)].x,0);
        set(plugin[get(tooltipname)].y,0);
        set(plugin[get(tooltipname)].width,100);
        set(plugin[get(tooltipname)].autoheight,true);
        set(plugin[get(tooltipname)].background,true);
        set(plugin[get(tooltipname)].backgroundcolor,0x000000);
        set(plugin[get(tooltipname)].roundedge,15);
        set(plugin[get(tooltipname)].backgroundalpha,0.5);
        set(plugin[get(tooltipname)].border,true);
        set(plugin[get(tooltipname)].glow,4);
        set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);
        set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold;
        font-size:16px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;');
        set(plugin[get(tooltipname)].textshadow,1);
        set(plugin[get(tooltipname)].textshadowrange,6.0);
        set(plugin[get(tooltipname)].textshadowangle,90);
        copy(plugin[get(tooltipname)].html,%1);
        set(plugin[get(tooltipname)].enabled,false);
        if(%2 == true,
            set(nowonclick, 'loadscene(%3,null,MERGE,%4)');
            trace(get(nowonclick));
            set(plugin[get(tooltipname)].onclick,get(nowonclick));
        )
    </action>

    <!-- <layer name="test" url="%SWFPATH%/snow_image/heart.png" align="center" alpha="1" visible="true" keep="true"  onclick="tween(alpha,0);delayedcall(0.5,set(visible,false));" onloaded="picture_resize(get(name));" /> -->

    <events name="picture_period"
            onpreviewcomplete="set(layer[%1].visible,true);tween(layer[%1].alpha,1);delayedcall(5,tween(layer[%1].alpha,0);delayedcall(0.5,set(layer[%1].visible,false)));"/>
    <!-- 开场提示结束 -->

    <!-- 天空地面遮罩 -->
    <action name="add_nadir_logo">
        txtadd(nadir_name,'spot_',%3);
        <!-- set(schp_name,%2);  -->
        addhotspot(get(nadir_name));
        set(hotspot[get(nadir_name)].url,%2);
        set(hotspot[get(nadir_name)].keep,%4);
        set(hotspot[get(nadir_name)].ath,0);
        set(hotspot[get(nadir_name)].atv,%1);
        set(hotspot[get(nadir_name)].distorted,true);
        set(hotspot[get(nadir_name)].scale,1.0);
        set(hotspot[get(nadir_name)].rotate,0.0);
        set(hotspot[get(nadir_name)].rotatewithview,false);
    </action>

    <action name="draghotspot">
        spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery, 'l');

        trace(get(ath));
        sub(drag_adjustx, mouse.stagex, hotspotcenterx);
        sub(drag_adjusty, mouse.stagey, hotspotcentery);

        asyncloop(pressed,
        sub(dx, mouse.stagex, drag_adjustx);
        sub(dy, mouse.stagey, drag_adjusty);

        screentosphere(mouse.stagex, mouse.stagey, ath, atv);
        );

    </action>

    <action name="set_hotspot_visible">
        for(set(i,0),i LT hotspot.count,inc(i),
        if(%1 == false,
        if(hotspot[get(i)].visible == true,
        set(hotspot[get(i)].mark,true);set(hotspot[get(i)].visible,%1);
        );
        ,
        if(hotspot[get(i)].mark == true,
        set(hotspot[get(i)].visible,%1);
        );
        );

        );
    </action>

    <action name="do_crop_animation">registerattribute(xframes, calc((imagewidth / %1) BOR 0));
        registerattribute(yframes, calc((imageheight / %2) BOR 0)); registerattribute(frames, calc(xframes * yframes));
        registerattribute(frame, 0); set(crop, '0|0|%1|%2'); setinterval(calc('crop_anim_' + name), calc(1.0 / %3),
        if(loaded, inc(frame); if(frame GE frames, if(onlastframe !== null, onlastframe() ); set(frame,0); ); mod(xpos,
        frame, xframes); div(ypos, frame, xframes); Math.floor(ypos); mul(xpos, %1); mul(ypos, %2); calc(crop, xpos +
        '|' + ypos + '|%1|%2'); , clearinterval(calc('crop_anim_' + name)); ); );
    </action>

       <!-- to overwrite it -->
       <action name="videoplayer_open">
        if(layer[videoplayer_bg],
            <!-- error -->
            trace('videoplayer_open - there is already a videoplayer!'-);
          ,
            <!-- step one - add a background layer and fade it in -->

            addlayer(videoplayer_bg);
            set(layer[videoplayer_bg].type, container);
            set(layer[videoplayer_bg].zindex, 999999);
            set(layer[videoplayer_bg].align, lefttop);
            set(layer[videoplayer_bg].width, 100%);
            set(layer[videoplayer_bg].height, 100%);
            set(layer[videoplayer_bg].bgcolor, 0x000000);
            set(layer[videoplayer_bg].bgalpha, 0.8);
            set(layer[videoplayer_bg].bgcapture, true);
            set(layer[videoplayer_bg].handcursor, false);
            set(layer[videoplayer_bg].alpha, 0.0);
            set(layer[videoplayer_bg].onclick, videoplayer_close() );
            tween(layer[videoplayer_bg].alpha, 1.0, 0.5, default,
                <!-- step two - after the fade-in add the videoplayer plugin -->


                addlayer(videoplayer_plugin);
                set(layer[videoplayer_plugin].parent, layer[videoplayer_bg]);
                set(layer[videoplayer_plugin].align, center);
                set(layer[videoplayer_plugin].loop, true);
                set(layer[videoplayer_plugin].onclick, togglepause() );
                set(layer[videoplayer_plugin].alpha, 0.0);
                set(layer[videoplayer_plugin].scale, 0.0);
                set(layer[videoplayer_plugin].onloaded, videoplayer_plugin_ready(%1) );

                addlayer(videoplayer_close);
                set(layer[videoplayer_close].align, righttop);
                set(layer[videoplayer_close].x, 10);
                set(layer[videoplayer_close].y, 10);
                set(layer[videoplayer_close].keep, true);
                set(layer[videoplayer_close].zorder, 99);
                set(layer[videoplayer_close].onclick, videoplayer_close());
                set(layer[videoplayer_close].parent, layer[videoplayer_plugin]);
                set(layer[videoplayer_close].url, '%SWFPATH%/custom/images/close.png');

                if('%2' != null, set(layer[videoplayer_plugin].posterurl,'%2'); );
                if('%3' != null, set(layer[videoplayer_plugin].volume,%3); );
                if(device.flash,
                    set(layer[videoplayer_plugin].url,'%SWFPATH%/plugins/videoplayer.swf');
                  ,
                    set(layer[videoplayer_plugin].url,'%SWFPATH%/plugins/videoplayer.js');
                  );
              );
          );
       </action>

       <action name="videoplayer_close">
        set(events.[videoplayer_events].name, null);
        if(layer[videoplayer_plugin], layer[videoplayer_plugin].pause() );
        set(layer[videoplayer_bg].onclick, null);

        tween(layer[videoplayer_plugin].scale, 0.0, 0.5, easeInBack);
        tween(layer[videoplayer_bg].alpha, 0.0, 0.5, default,
            removelayer(videoplayer_plugin);
            removelayer(videoplayer_bg);
            removelayer(videoplayer_close);
          );
       </action>

       <action name="comment_int">
            set(commname,%1);
            addhotspot(get(commname));
            set(hotspot[get(commname)].url,/pano_player/custom/plugin/comment/images/comm-hide-icon.png);
            set(hotspot[get(commname)].ath,%4);
            set(hotspot[get(commname)].atv,%5);
            set(hotspot[get(commname)].edge,bottom);
            set(hotspot[get(commname)].zoom,false);
            <!-- set(hotspot[get(commname)].visible,true); -->
            set(commname_txt,%2);
            addplugin(get(commname_txt));
            set(plugin[get(commname_txt)].parent,hotspot[%1]);
            set(plugin[get(commname_txt)].url,'%SWFPATH%/plugins/textfield.swf');
            set(plugin[get(commname_txt)].align,righttop);
            set(plugin[get(commname_txt)].edge,lefttop);
            set(plugin[get(commname_txt)].x,-5);
            set(plugin[get(commname_txt)].autowidth,true);
            set(plugin[get(commname_txt)].height,30);
            set(plugin[get(commname_txt)].background,true);
            set(plugin[get(commname_txt)].backgroundcolor,0x000000);
            set(plugin[get(commname_txt)].roundedge,5);
            set(plugin[get(commname_txt)].backgroundalpha,0.8);
            set(plugin[get(commname_txt)].css,'text-align:center;color:#FFFFFF;font-size:14px;line-height:25px;padding:0 5px;font-family:microsoft yahei;');
            set(plugin[get(commname_txt)].html,%6);
            <!-- set(plugin[get(commname_txt)].enabled,false); -->
            set(commname_avatar,%3);
            addplugin(get(commname_avatar));
            set(plugin[get(commname_avatar)].url,'%SWFPATH%/plugins/textfield.swf');
            set(plugin[get(commname_avatar)].parent,hotspot[%1]);
            set(plugin[get(commname_avatar)].width,30);
            set(plugin[get(commname_avatar)].height,30);
            set(plugin[get(commname_avatar)].align,lefttop);
            set(plugin[get(commname_avatar)].edge,lefttop);
            <!-- set(plugin[get(commname_avatar)].keep,false); -->
            set(plugin[get(commname_avatar)].roundedge,3);
            set(plugin[get(commname_avatar)].css,'margin:0;width:30px;height:30px;background:url(%7) 0 0 no-repeat;background-size:30px');
            if(%7 == true,
                set(hotspot[get(commname)].visible,true);
                set(plugin[get(commname_txt)].enabled,false);
                set(plugin[get(commname_avatar)].keep,false);
                ,
                set(hotspot[get(commname)].ondown,dragcommenthotspot());
                set(hotspot[get(commname)].onup,js(update_comm_ele(get(xml.scene),get(ath),get(atv))));
                set(plugin[get(commname_txt)].enabled,true);
            )
       </action>


       <action name="addTourGuidePoint">set(tour_point_name, %1); addhotspot(get(tour_point_name));
           set(hotspot[get(tour_point_name)].url,'%SWFPATH%/custom/images/tourpoint.png');
           set(hotspot[get(tour_point_name)].ath,%2); set(hotspot[get(tour_point_name)].atv,%3);
           set(hotspot[get(tour_point_name)].visible,%5); set(hotspot[get(tour_point_name)].width,40);
           set(hotspot[get(tour_point_name)].height,40); set(hotspot[get(tour_point_name)].zoom,false);
           set(hotspot[get(tour_point_name)].ondown,'draghotspot();');
           set(hotspot[get(tour_point_name)].onup,'js(putTourGuideLocation(get(name),get(ath),get(atv)));');
           set(hotspot[get(tour_point_name)].onclick,'tourpointclick();'); txtadd(tooltipname, 'tooltip_',
           get(tour_point_name)); addlayer(get(tooltipname)); txtadd(layer[get(tooltipname)].parent,
           'hotspot[',get(tour_point_name),']'); set(layer[get(tooltipname)].url,'%SWFPATH%/plugins/textfield.swf');
           set(layer[get(tooltipname)].align,center); set(layer[get(tooltipname)].edge,center);
           set(layer[get(tooltipname)].width,40); set(layer[get(tooltipname)].height,40);
           set(layer[get(tooltipname)].background,false); set(layer[get(tooltipname)].backgroundcolor,0x039be5);
           set(layer[get(tooltipname)].roundedge,20); set(layer[get(tooltipname)].glow,4);
           set(layer[get(tooltipname)].glowcolor,0xFFFFFF); set(layer[get(tooltipname)].css,'text-align:center;
           line-height:40px;color:#000000; font-family:"Microsoft YaHei"; font-weight:normal; font-size:14px;');
           set(layer[get(tooltipname)].html,%4); set(layer[get(tooltipname)].enabled,false);
       </action>

       <action name="tourpointclick">js(krpTourPointClick(get(name)));</action>


       <action name="skin_arrange_buttons">calc(show_selbuttons, scene.count GT 1); calc(show_thumbutton,
           skin_settings.thumbs == true); calc(show_mapbutton, skin_settings.maps == true); calc(show_gyrobutton,
           plugin[skin_gyro].available == true); calc(show_vrbutton, webvr.isavailable ==
           true); calc(show_fsbutton, device.fullscreensupport == true); set(lpos,6); set(cpos,0); if(show_gyrobutton,
           dec(cpos,20)); if(show_vrbutton, dec(cpos,24)); set(rpos,6); calc(show_dirbuttons, !device.mobile AND
           ((area.pixelwidth + 2*cpos) GT 520)); copy(layer[skin_btn_navi].visible, show_dirbuttons);
           copy(layer[skin_btn_prev].visible, show_selbuttons); copy(layer[skin_btn_next].visible, show_selbuttons);
           if(show_selbuttons, inc(lpos,44); inc(rpos,44); ); copy(layer[skin_btn_thumbs].visible, show_thumbutton);
           copy(layer[skin_btn_thumbs].x, lpos); if(show_thumbutton, inc(lpos,40)); copy(layer[skin_btn_map].visible,
           show_mapbutton); copy(layer[skin_btn_map].x, lpos); if(show_mapbutton, inc(lpos,40)); if(show_dirbuttons,
           copy(layer[skin_btn_navi].x, cpos); inc(cpos,140); set(layer[skin_btn_gyro].align, center);
           copy(layer[skin_btn_gyro].visible, show_gyrobutton); copy(layer[skin_btn_gyro].x, cpos); if(show_gyrobutton,
           inc(cpos,48)); set(layer[skin_btn_vr].align, center); copy(layer[skin_btn_vr].visible, show_vrbutton);
           copy(layer[skin_btn_vr].x, cpos); if(show_vrbutton, inc(cpos,80)); , set(layer[skin_btn_gyro].align, left);
           copy(layer[skin_btn_gyro].visible, show_gyrobutton); copy(layer[skin_btn_gyro].x, lpos); if(show_gyrobutton,
           inc(lpos,40)); set(layer[skin_btn_vr].align, left); copy(layer[skin_btn_vr].visible, show_vrbutton);
           copy(layer[skin_btn_vr].x, lpos); if(show_vrbutton, inc(lpos,80)); ); copy(layer[skin_btn_hide].x, rpos);
           inc(rpos,40); copy(layer[skin_btn_fs].visible, show_fsbutton); copy(layer[skin_btn_fs].x, rpos);
           if(show_fsbutton, inc(rpos,40));
       </action>

</krpano>
